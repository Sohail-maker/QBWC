#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickbooksWebService.DomainModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quickbooks")]
	public partial class QuickBooksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertFailedOrder(FailedOrder instance);
    partial void UpdateFailedOrder(FailedOrder instance);
    partial void DeleteFailedOrder(FailedOrder instance);
    partial void InsertInventoryLink(InventoryLink instance);
    partial void UpdateInventoryLink(InventoryLink instance);
    partial void DeleteInventoryLink(InventoryLink instance);
    partial void InsertOrderLineItem(OrderLineItem instance);
    partial void UpdateOrderLineItem(OrderLineItem instance);
    partial void DeleteOrderLineItem(OrderLineItem instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertQuickbooksInventory(QuickbooksInventory instance);
    partial void UpdateQuickbooksInventory(QuickbooksInventory instance);
    partial void DeleteQuickbooksInventory(QuickbooksInventory instance);
    partial void InsertSalesTaxCode(SalesTaxCode instance);
    partial void UpdateSalesTaxCode(SalesTaxCode instance);
    partial void DeleteSalesTaxCode(SalesTaxCode instance);
    partial void InsertShopInventory(ShopInventory instance);
    partial void UpdateShopInventory(ShopInventory instance);
    partial void DeleteShopInventory(ShopInventory instance);
    partial void InsertShopQuickbooksInventoryLink(ShopQuickbooksInventoryLink instance);
    partial void UpdateShopQuickbooksInventoryLink(ShopQuickbooksInventoryLink instance);
    partial void DeleteShopQuickbooksInventoryLink(ShopQuickbooksInventoryLink instance);
    partial void Insertstate(state instance);
    partial void Updatestate(state instance);
    partial void Deletestate(state instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    #endregion
		
		public QuickBooksDataContext() : 
				base(global::QuickbooksWebService.DomainModel.Properties.Settings.Default.QuickbooksConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuickBooksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuickBooksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuickBooksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuickBooksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<FailedOrder> FailedOrders
		{
			get
			{
				return this.GetTable<FailedOrder>();
			}
		}
		
		public System.Data.Linq.Table<InventoryLink> InventoryLinks
		{
			get
			{
				return this.GetTable<InventoryLink>();
			}
		}
		
		public System.Data.Linq.Table<OrderLineItem> OrderLineItems
		{
			get
			{
				return this.GetTable<OrderLineItem>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<QuickbooksInventory> QuickbooksInventories
		{
			get
			{
				return this.GetTable<QuickbooksInventory>();
			}
		}
		
		public System.Data.Linq.Table<SalesTaxCode> SalesTaxCodes
		{
			get
			{
				return this.GetTable<SalesTaxCode>();
			}
		}
		
		public System.Data.Linq.Table<ShopInventory> ShopInventories
		{
			get
			{
				return this.GetTable<ShopInventory>();
			}
		}
		
		public System.Data.Linq.Table<ShopQuickbooksInventoryLink> ShopQuickbooksInventoryLinks
		{
			get
			{
				return this.GetTable<ShopQuickbooksInventoryLink>();
			}
		}
		
		public System.Data.Linq.Table<state> states
		{
			get
			{
				return this.GetTable<state>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientID;
		
		private int _ContentEditsClientID;
		
		private string _ClientName;
		
		private string _OwnerIDGuid;
		
		private string _QwcFile;
		
		private string _FileIDGuid;
		
		private string _QbType;
		
		private System.Nullable<bool> _RequiresInventoryUpdate;
		
		private string _SalesTaxReference;
		
		private string _ShippingReference;
		
		private string _InvoiceClassRef;
		
		private string _InvoiceTemplateRef;
		
		private string _EmailRecipient;
		
		private System.Nullable<bool> _IsContentEditsShop;
		
		private System.Nullable<bool> _RequiresTaxCodeUpdate;
		
		private System.Nullable<bool> _RequiresInvoiceTemplateUpdate;
		
		private System.Nullable<bool> _RequiresInvoiceClassUpdate;
		
		private EntitySet<FailedOrder> _FailedOrders;
		
		private EntitySet<InventoryLink> _InventoryLinks;
		
		private EntitySet<SalesTaxCode> _SalesTaxCodes;
		
		private EntitySet<ShopInventory> _ShopInventories;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<webpages_Membership> _webpages_Memberships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnContentEditsClientIDChanging(int value);
    partial void OnContentEditsClientIDChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnOwnerIDGuidChanging(string value);
    partial void OnOwnerIDGuidChanged();
    partial void OnQwcFileChanging(string value);
    partial void OnQwcFileChanged();
    partial void OnFileIDGuidChanging(string value);
    partial void OnFileIDGuidChanged();
    partial void OnQbTypeChanging(string value);
    partial void OnQbTypeChanged();
    partial void OnRequiresInventoryUpdateChanging(System.Nullable<bool> value);
    partial void OnRequiresInventoryUpdateChanged();
    partial void OnSalesTaxReferenceChanging(string value);
    partial void OnSalesTaxReferenceChanged();
    partial void OnShippingReferenceChanging(string value);
    partial void OnShippingReferenceChanged();
    partial void OnInvoiceClassRefChanging(string value);
    partial void OnInvoiceClassRefChanged();
    partial void OnInvoiceTemplateRefChanging(string value);
    partial void OnInvoiceTemplateRefChanged();
    partial void OnEmailRecipientChanging(string value);
    partial void OnEmailRecipientChanged();
    partial void OnIsContentEditsShopChanging(System.Nullable<bool> value);
    partial void OnIsContentEditsShopChanged();
    partial void OnRequiresTaxCodeUpdateChanging(System.Nullable<bool> value);
    partial void OnRequiresTaxCodeUpdateChanged();
    partial void OnRequiresInvoiceTemplateUpdateChanging(System.Nullable<bool> value);
    partial void OnRequiresInvoiceTemplateUpdateChanged();
    partial void OnRequiresInvoiceClassUpdateChanging(System.Nullable<bool> value);
    partial void OnRequiresInvoiceClassUpdateChanged();
    #endregion
		
		public Client()
		{
			this._FailedOrders = new EntitySet<FailedOrder>(new Action<FailedOrder>(this.attach_FailedOrders), new Action<FailedOrder>(this.detach_FailedOrders));
			this._InventoryLinks = new EntitySet<InventoryLink>(new Action<InventoryLink>(this.attach_InventoryLinks), new Action<InventoryLink>(this.detach_InventoryLinks));
			this._SalesTaxCodes = new EntitySet<SalesTaxCode>(new Action<SalesTaxCode>(this.attach_SalesTaxCodes), new Action<SalesTaxCode>(this.detach_SalesTaxCodes));
			this._ShopInventories = new EntitySet<ShopInventory>(new Action<ShopInventory>(this.attach_ShopInventories), new Action<ShopInventory>(this.detach_ShopInventories));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._webpages_Memberships = new EntitySet<webpages_Membership>(new Action<webpages_Membership>(this.attach_webpages_Memberships), new Action<webpages_Membership>(this.detach_webpages_Memberships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentEditsClientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContentEditsClientID
		{
			get
			{
				return this._ContentEditsClientID;
			}
			set
			{
				if ((this._ContentEditsClientID != value))
				{
					this.OnContentEditsClientIDChanging(value);
					this.SendPropertyChanging();
					this._ContentEditsClientID = value;
					this.SendPropertyChanged("ContentEditsClientID");
					this.OnContentEditsClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerIDGuid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OwnerIDGuid
		{
			get
			{
				return this._OwnerIDGuid;
			}
			set
			{
				if ((this._OwnerIDGuid != value))
				{
					this.OnOwnerIDGuidChanging(value);
					this.SendPropertyChanging();
					this._OwnerIDGuid = value;
					this.SendPropertyChanged("OwnerIDGuid");
					this.OnOwnerIDGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QwcFile", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string QwcFile
		{
			get
			{
				return this._QwcFile;
			}
			set
			{
				if ((this._QwcFile != value))
				{
					this.OnQwcFileChanging(value);
					this.SendPropertyChanging();
					this._QwcFile = value;
					this.SendPropertyChanged("QwcFile");
					this.OnQwcFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileIDGuid", DbType="NVarChar(50)")]
		public string FileIDGuid
		{
			get
			{
				return this._FileIDGuid;
			}
			set
			{
				if ((this._FileIDGuid != value))
				{
					this.OnFileIDGuidChanging(value);
					this.SendPropertyChanging();
					this._FileIDGuid = value;
					this.SendPropertyChanged("FileIDGuid");
					this.OnFileIDGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QbType", DbType="NVarChar(50)")]
		public string QbType
		{
			get
			{
				return this._QbType;
			}
			set
			{
				if ((this._QbType != value))
				{
					this.OnQbTypeChanging(value);
					this.SendPropertyChanging();
					this._QbType = value;
					this.SendPropertyChanged("QbType");
					this.OnQbTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresInventoryUpdate", DbType="Bit")]
		public System.Nullable<bool> RequiresInventoryUpdate
		{
			get
			{
				return this._RequiresInventoryUpdate;
			}
			set
			{
				if ((this._RequiresInventoryUpdate != value))
				{
					this.OnRequiresInventoryUpdateChanging(value);
					this.SendPropertyChanging();
					this._RequiresInventoryUpdate = value;
					this.SendPropertyChanged("RequiresInventoryUpdate");
					this.OnRequiresInventoryUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxReference", DbType="NVarChar(50)")]
		public string SalesTaxReference
		{
			get
			{
				return this._SalesTaxReference;
			}
			set
			{
				if ((this._SalesTaxReference != value))
				{
					this.OnSalesTaxReferenceChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxReference = value;
					this.SendPropertyChanged("SalesTaxReference");
					this.OnSalesTaxReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingReference", DbType="NVarChar(50)")]
		public string ShippingReference
		{
			get
			{
				return this._ShippingReference;
			}
			set
			{
				if ((this._ShippingReference != value))
				{
					this.OnShippingReferenceChanging(value);
					this.SendPropertyChanging();
					this._ShippingReference = value;
					this.SendPropertyChanged("ShippingReference");
					this.OnShippingReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceClassRef", DbType="NVarChar(50)")]
		public string InvoiceClassRef
		{
			get
			{
				return this._InvoiceClassRef;
			}
			set
			{
				if ((this._InvoiceClassRef != value))
				{
					this.OnInvoiceClassRefChanging(value);
					this.SendPropertyChanging();
					this._InvoiceClassRef = value;
					this.SendPropertyChanged("InvoiceClassRef");
					this.OnInvoiceClassRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTemplateRef", DbType="NVarChar(50)")]
		public string InvoiceTemplateRef
		{
			get
			{
				return this._InvoiceTemplateRef;
			}
			set
			{
				if ((this._InvoiceTemplateRef != value))
				{
					this.OnInvoiceTemplateRefChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTemplateRef = value;
					this.SendPropertyChanged("InvoiceTemplateRef");
					this.OnInvoiceTemplateRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailRecipient", DbType="NVarChar(50)")]
		public string EmailRecipient
		{
			get
			{
				return this._EmailRecipient;
			}
			set
			{
				if ((this._EmailRecipient != value))
				{
					this.OnEmailRecipientChanging(value);
					this.SendPropertyChanging();
					this._EmailRecipient = value;
					this.SendPropertyChanged("EmailRecipient");
					this.OnEmailRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContentEditsShop", DbType="Bit")]
		public System.Nullable<bool> IsContentEditsShop
		{
			get
			{
				return this._IsContentEditsShop;
			}
			set
			{
				if ((this._IsContentEditsShop != value))
				{
					this.OnIsContentEditsShopChanging(value);
					this.SendPropertyChanging();
					this._IsContentEditsShop = value;
					this.SendPropertyChanged("IsContentEditsShop");
					this.OnIsContentEditsShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresTaxCodeUpdate", DbType="Bit")]
		public System.Nullable<bool> RequiresTaxCodeUpdate
		{
			get
			{
				return this._RequiresTaxCodeUpdate;
			}
			set
			{
				if ((this._RequiresTaxCodeUpdate != value))
				{
					this.OnRequiresTaxCodeUpdateChanging(value);
					this.SendPropertyChanging();
					this._RequiresTaxCodeUpdate = value;
					this.SendPropertyChanged("RequiresTaxCodeUpdate");
					this.OnRequiresTaxCodeUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresInvoiceTemplateUpdate", DbType="Bit")]
		public System.Nullable<bool> RequiresInvoiceTemplateUpdate
		{
			get
			{
				return this._RequiresInvoiceTemplateUpdate;
			}
			set
			{
				if ((this._RequiresInvoiceTemplateUpdate != value))
				{
					this.OnRequiresInvoiceTemplateUpdateChanging(value);
					this.SendPropertyChanging();
					this._RequiresInvoiceTemplateUpdate = value;
					this.SendPropertyChanged("RequiresInvoiceTemplateUpdate");
					this.OnRequiresInvoiceTemplateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresInvoiceClassUpdate", DbType="Bit")]
		public System.Nullable<bool> RequiresInvoiceClassUpdate
		{
			get
			{
				return this._RequiresInvoiceClassUpdate;
			}
			set
			{
				if ((this._RequiresInvoiceClassUpdate != value))
				{
					this.OnRequiresInvoiceClassUpdateChanging(value);
					this.SendPropertyChanging();
					this._RequiresInvoiceClassUpdate = value;
					this.SendPropertyChanged("RequiresInvoiceClassUpdate");
					this.OnRequiresInvoiceClassUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_FailedOrder", Storage="_FailedOrders", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<FailedOrder> FailedOrders
		{
			get
			{
				return this._FailedOrders;
			}
			set
			{
				this._FailedOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_InventoryLink", Storage="_InventoryLinks", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<InventoryLink> InventoryLinks
		{
			get
			{
				return this._InventoryLinks;
			}
			set
			{
				this._InventoryLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_SalesTaxCode", Storage="_SalesTaxCodes", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<SalesTaxCode> SalesTaxCodes
		{
			get
			{
				return this._SalesTaxCodes;
			}
			set
			{
				this._SalesTaxCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ShopInventory", Storage="_ShopInventories", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<ShopInventory> ShopInventories
		{
			get
			{
				return this._ShopInventories;
			}
			set
			{
				this._ShopInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Transactions", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_webpages_Membership", Storage="_webpages_Memberships", ThisKey="ContentEditsClientID", OtherKey="ClientID")]
		public EntitySet<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this._webpages_Memberships;
			}
			set
			{
				this._webpages_Memberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailedOrders(FailedOrder entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_FailedOrders(FailedOrder entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_InventoryLinks(InventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_InventoryLinks(InventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_SalesTaxCodes(SalesTaxCode entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_SalesTaxCodes(SalesTaxCode entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_ShopInventories(ShopInventory entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_ShopInventories(ShopInventory entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_webpages_Memberships(webpages_Membership entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_webpages_Memberships(webpages_Membership entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole
	{
		
		private int _UserId;
		
		private int _RoleId;
		
		public webpages_UsersInRole()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FailedOrders")]
	public partial class FailedOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FailedOrderID;
		
		private int _RequestID;
		
		private int _OrderID;
		
		private bool _Imported;
		
		private int _ClientID;
		
		private System.DateTime _DateAdded;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFailedOrderIDChanging(int value);
    partial void OnFailedOrderIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnImportedChanging(bool value);
    partial void OnImportedChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    #endregion
		
		public FailedOrder()
		{
			this._Client = default(EntityRef<Client>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FailedOrderID
		{
			get
			{
				return this._FailedOrderID;
			}
			set
			{
				if ((this._FailedOrderID != value))
				{
					this.OnFailedOrderIDChanging(value);
					this.SendPropertyChanging();
					this._FailedOrderID = value;
					this.SendPropertyChanged("FailedOrderID");
					this.OnFailedOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imported", DbType="Bit NOT NULL")]
		public bool Imported
		{
			get
			{
				return this._Imported;
			}
			set
			{
				if ((this._Imported != value))
				{
					this.OnImportedChanging(value);
					this.SendPropertyChanging();
					this._Imported = value;
					this.SendPropertyChanged("Imported");
					this.OnImportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_FailedOrder", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.FailedOrders.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.FailedOrders.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_FailedOrder", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.FailedOrders.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.FailedOrders.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryLinks")]
	public partial class InventoryLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkID;
		
		private string _WebInventoryName;
		
		private string _QBInventoryName;
		
		private int _ClientID;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnWebInventoryNameChanging(string value);
    partial void OnWebInventoryNameChanged();
    partial void OnQBInventoryNameChanging(string value);
    partial void OnQBInventoryNameChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    #endregion
		
		public InventoryLink()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebInventoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WebInventoryName
		{
			get
			{
				return this._WebInventoryName;
			}
			set
			{
				if ((this._WebInventoryName != value))
				{
					this.OnWebInventoryNameChanging(value);
					this.SendPropertyChanging();
					this._WebInventoryName = value;
					this.SendPropertyChanged("WebInventoryName");
					this.OnWebInventoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QBInventoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string QBInventoryName
		{
			get
			{
				return this._QBInventoryName;
			}
			set
			{
				if ((this._QBInventoryName != value))
				{
					this.OnQBInventoryNameChanging(value);
					this.SendPropertyChanging();
					this._QBInventoryName = value;
					this.SendPropertyChanged("QBInventoryName");
					this.OnQBInventoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_InventoryLink", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.InventoryLinks.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.InventoryLinks.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderLineItems")]
	public partial class OrderLineItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LineItemID;
		
		private int _OrderID;
		
		private string _InventoryName;
		
		private string _FullDescription;
		
		private decimal _PriceEach;
		
		private System.Nullable<int> _Quantity;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineItemIDChanging(int value);
    partial void OnLineItemIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnInventoryNameChanging(string value);
    partial void OnInventoryNameChanged();
    partial void OnFullDescriptionChanging(string value);
    partial void OnFullDescriptionChanged();
    partial void OnPriceEachChanging(decimal value);
    partial void OnPriceEachChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public OrderLineItem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LineItemID
		{
			get
			{
				return this._LineItemID;
			}
			set
			{
				if ((this._LineItemID != value))
				{
					this.OnLineItemIDChanging(value);
					this.SendPropertyChanging();
					this._LineItemID = value;
					this.SendPropertyChanged("LineItemID");
					this.OnLineItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string InventoryName
		{
			get
			{
				return this._InventoryName;
			}
			set
			{
				if ((this._InventoryName != value))
				{
					this.OnInventoryNameChanging(value);
					this.SendPropertyChanging();
					this._InventoryName = value;
					this.SendPropertyChanged("InventoryName");
					this.OnInventoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string FullDescription
		{
			get
			{
				return this._FullDescription;
			}
			set
			{
				if ((this._FullDescription != value))
				{
					this.OnFullDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FullDescription = value;
					this.SendPropertyChanged("FullDescription");
					this.OnFullDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceEach", DbType="Money NOT NULL")]
		public decimal PriceEach
		{
			get
			{
				return this._PriceEach;
			}
			set
			{
				if ((this._PriceEach != value))
				{
					this.OnPriceEachChanging(value);
					this.SendPropertyChanging();
					this._PriceEach = value;
					this.SendPropertyChanged("PriceEach");
					this.OnPriceEachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderLineItem", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderLineItems.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderLineItems.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private int _OrderNumber;
		
		private int _CustomerID;
		
		private int _ClientID;
		
		private bool _Reported;
		
		private System.Nullable<int> _TransactionID;
		
		private int _RequestID;
		
		private string _ResponseXML;
		
		private string _Message;
		
		private string _Receipt;
		
		private System.Nullable<decimal> _OrderTax;
		
		private System.Nullable<decimal> _OrderShipping;
		
		private System.Nullable<decimal> _AmountDiscount;
		
		private System.Nullable<decimal> _PercentDiscount;
		
		private System.Nullable<decimal> _OrderTaxPercentage;
		
		private string _ShippingDescription;
		
		private EntitySet<FailedOrder> _FailedOrders;
		
		private EntitySet<OrderLineItem> _OrderLineItems;
		
		private EntityRef<Transaction> _Transaction;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderNumberChanging(int value);
    partial void OnOrderNumberChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnReportedChanging(bool value);
    partial void OnReportedChanged();
    partial void OnTransactionIDChanging(System.Nullable<int> value);
    partial void OnTransactionIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnResponseXMLChanging(string value);
    partial void OnResponseXMLChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnReceiptChanging(string value);
    partial void OnReceiptChanged();
    partial void OnOrderTaxChanging(System.Nullable<decimal> value);
    partial void OnOrderTaxChanged();
    partial void OnOrderShippingChanging(System.Nullable<decimal> value);
    partial void OnOrderShippingChanged();
    partial void OnAmountDiscountChanging(System.Nullable<decimal> value);
    partial void OnAmountDiscountChanged();
    partial void OnPercentDiscountChanging(System.Nullable<decimal> value);
    partial void OnPercentDiscountChanged();
    partial void OnOrderTaxPercentageChanging(System.Nullable<decimal> value);
    partial void OnOrderTaxPercentageChanged();
    partial void OnShippingDescriptionChanging(string value);
    partial void OnShippingDescriptionChanged();
    #endregion
		
		public Order()
		{
			this._FailedOrders = new EntitySet<FailedOrder>(new Action<FailedOrder>(this.attach_FailedOrders), new Action<FailedOrder>(this.detach_FailedOrders));
			this._OrderLineItems = new EntitySet<OrderLineItem>(new Action<OrderLineItem>(this.attach_OrderLineItems), new Action<OrderLineItem>(this.detach_OrderLineItems));
			this._Transaction = default(EntityRef<Transaction>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int NOT NULL")]
		public int OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported", DbType="Bit NOT NULL")]
		public bool Reported
		{
			get
			{
				return this._Reported;
			}
			set
			{
				if ((this._Reported != value))
				{
					this.OnReportedChanging(value);
					this.SendPropertyChanging();
					this._Reported = value;
					this.SendPropertyChanged("Reported");
					this.OnReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int")]
		public System.Nullable<int> TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseXML", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ResponseXML
		{
			get
			{
				return this._ResponseXML;
			}
			set
			{
				if ((this._ResponseXML != value))
				{
					this.OnResponseXMLChanging(value);
					this.SendPropertyChanging();
					this._ResponseXML = value;
					this.SendPropertyChanged("ResponseXML");
					this.OnResponseXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Receipt", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Receipt
		{
			get
			{
				return this._Receipt;
			}
			set
			{
				if ((this._Receipt != value))
				{
					this.OnReceiptChanging(value);
					this.SendPropertyChanging();
					this._Receipt = value;
					this.SendPropertyChanged("Receipt");
					this.OnReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTax", DbType="Money")]
		public System.Nullable<decimal> OrderTax
		{
			get
			{
				return this._OrderTax;
			}
			set
			{
				if ((this._OrderTax != value))
				{
					this.OnOrderTaxChanging(value);
					this.SendPropertyChanging();
					this._OrderTax = value;
					this.SendPropertyChanged("OrderTax");
					this.OnOrderTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderShipping", DbType="Money")]
		public System.Nullable<decimal> OrderShipping
		{
			get
			{
				return this._OrderShipping;
			}
			set
			{
				if ((this._OrderShipping != value))
				{
					this.OnOrderShippingChanging(value);
					this.SendPropertyChanging();
					this._OrderShipping = value;
					this.SendPropertyChanged("OrderShipping");
					this.OnOrderShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountDiscount", DbType="Money")]
		public System.Nullable<decimal> AmountDiscount
		{
			get
			{
				return this._AmountDiscount;
			}
			set
			{
				if ((this._AmountDiscount != value))
				{
					this.OnAmountDiscountChanging(value);
					this.SendPropertyChanging();
					this._AmountDiscount = value;
					this.SendPropertyChanged("AmountDiscount");
					this.OnAmountDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentDiscount", DbType="Money")]
		public System.Nullable<decimal> PercentDiscount
		{
			get
			{
				return this._PercentDiscount;
			}
			set
			{
				if ((this._PercentDiscount != value))
				{
					this.OnPercentDiscountChanging(value);
					this.SendPropertyChanging();
					this._PercentDiscount = value;
					this.SendPropertyChanged("PercentDiscount");
					this.OnPercentDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTaxPercentage", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> OrderTaxPercentage
		{
			get
			{
				return this._OrderTaxPercentage;
			}
			set
			{
				if ((this._OrderTaxPercentage != value))
				{
					this.OnOrderTaxPercentageChanging(value);
					this.SendPropertyChanging();
					this._OrderTaxPercentage = value;
					this.SendPropertyChanged("OrderTaxPercentage");
					this.OnOrderTaxPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingDescription", DbType="NVarChar(255)")]
		public string ShippingDescription
		{
			get
			{
				return this._ShippingDescription;
			}
			set
			{
				if ((this._ShippingDescription != value))
				{
					this.OnShippingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShippingDescription = value;
					this.SendPropertyChanged("ShippingDescription");
					this.OnShippingDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_FailedOrder", Storage="_FailedOrders", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<FailedOrder> FailedOrders
		{
			get
			{
				return this._FailedOrders;
			}
			set
			{
				this._FailedOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderLineItem", Storage="_OrderLineItems", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderLineItem> OrderLineItems
		{
			get
			{
				return this._OrderLineItems;
			}
			set
			{
				this._OrderLineItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Order", Storage="_Transaction", ThisKey="TransactionID", OtherKey="TransactionID", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._TransactionID = value.TransactionID;
					}
					else
					{
						this._TransactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailedOrders(FailedOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_FailedOrders(FailedOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderLineItems(OrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderLineItems(OrderLineItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuickbooksInventory")]
	public partial class QuickbooksInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuickbooksInventoryID;
		
		private string _ListID;
		
		private string _FullName;
		
		private int _ClientID;
		
		private EntitySet<ShopInventory> _ShopInventories;
		
		private EntitySet<ShopQuickbooksInventoryLink> _ShopQuickbooksInventoryLinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuickbooksInventoryIDChanging(int value);
    partial void OnQuickbooksInventoryIDChanged();
    partial void OnListIDChanging(string value);
    partial void OnListIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    #endregion
		
		public QuickbooksInventory()
		{
			this._ShopInventories = new EntitySet<ShopInventory>(new Action<ShopInventory>(this.attach_ShopInventories), new Action<ShopInventory>(this.detach_ShopInventories));
			this._ShopQuickbooksInventoryLinks = new EntitySet<ShopQuickbooksInventoryLink>(new Action<ShopQuickbooksInventoryLink>(this.attach_ShopQuickbooksInventoryLinks), new Action<ShopQuickbooksInventoryLink>(this.detach_ShopQuickbooksInventoryLinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickbooksInventoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuickbooksInventoryID
		{
			get
			{
				return this._QuickbooksInventoryID;
			}
			set
			{
				if ((this._QuickbooksInventoryID != value))
				{
					this.OnQuickbooksInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._QuickbooksInventoryID = value;
					this.SendPropertyChanged("QuickbooksInventoryID");
					this.OnQuickbooksInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ListID
		{
			get
			{
				return this._ListID;
			}
			set
			{
				if ((this._ListID != value))
				{
					this.OnListIDChanging(value);
					this.SendPropertyChanging();
					this._ListID = value;
					this.SendPropertyChanged("ListID");
					this.OnListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuickbooksInventory_ShopInventory", Storage="_ShopInventories", ThisKey="QuickbooksInventoryID", OtherKey="QuickbooksInventoryID")]
		public EntitySet<ShopInventory> ShopInventories
		{
			get
			{
				return this._ShopInventories;
			}
			set
			{
				this._ShopInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuickbooksInventory_ShopQuickbooksInventoryLink", Storage="_ShopQuickbooksInventoryLinks", ThisKey="QuickbooksInventoryID", OtherKey="QuickbooksInventoryID")]
		public EntitySet<ShopQuickbooksInventoryLink> ShopQuickbooksInventoryLinks
		{
			get
			{
				return this._ShopQuickbooksInventoryLinks;
			}
			set
			{
				this._ShopQuickbooksInventoryLinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopInventories(ShopInventory entity)
		{
			this.SendPropertyChanging();
			entity.QuickbooksInventory = this;
		}
		
		private void detach_ShopInventories(ShopInventory entity)
		{
			this.SendPropertyChanging();
			entity.QuickbooksInventory = null;
		}
		
		private void attach_ShopQuickbooksInventoryLinks(ShopQuickbooksInventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.QuickbooksInventory = this;
		}
		
		private void detach_ShopQuickbooksInventoryLinks(ShopQuickbooksInventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.QuickbooksInventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesTaxCodes")]
	public partial class SalesTaxCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesTaxCodeID;
		
		private decimal _Rate;
		
		private string _QuickbooksFullName;
		
		private int _ClientID;
		
		private System.Nullable<bool> _Active;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTaxCodeIDChanging(int value);
    partial void OnSalesTaxCodeIDChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnQuickbooksFullNameChanging(string value);
    partial void OnQuickbooksFullNameChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public SalesTaxCode()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesTaxCodeID
		{
			get
			{
				return this._SalesTaxCodeID;
			}
			set
			{
				if ((this._SalesTaxCodeID != value))
				{
					this.OnSalesTaxCodeIDChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxCodeID = value;
					this.SendPropertyChanged("SalesTaxCodeID");
					this.OnSalesTaxCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(8,4) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickbooksFullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QuickbooksFullName
		{
			get
			{
				return this._QuickbooksFullName;
			}
			set
			{
				if ((this._QuickbooksFullName != value))
				{
					this.OnQuickbooksFullNameChanging(value);
					this.SendPropertyChanging();
					this._QuickbooksFullName = value;
					this.SendPropertyChanged("QuickbooksFullName");
					this.OnQuickbooksFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_SalesTaxCode", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.SalesTaxCodes.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.SalesTaxCodes.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopInventory")]
	public partial class ShopInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InventoryID;
		
		private string _Name;
		
		private int _ClientID;
		
		private System.Nullable<int> _QuickbooksInventoryID;
		
		private EntitySet<ShopQuickbooksInventoryLink> _ShopQuickbooksInventoryLinks;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<QuickbooksInventory> _QuickbooksInventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIDChanging(int value);
    partial void OnInventoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnQuickbooksInventoryIDChanging(System.Nullable<int> value);
    partial void OnQuickbooksInventoryIDChanged();
    #endregion
		
		public ShopInventory()
		{
			this._ShopQuickbooksInventoryLinks = new EntitySet<ShopQuickbooksInventoryLink>(new Action<ShopQuickbooksInventoryLink>(this.attach_ShopQuickbooksInventoryLinks), new Action<ShopQuickbooksInventoryLink>(this.detach_ShopQuickbooksInventoryLinks));
			this._Client = default(EntityRef<Client>);
			this._QuickbooksInventory = default(EntityRef<QuickbooksInventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryID");
					this.OnInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickbooksInventoryID", DbType="Int")]
		public System.Nullable<int> QuickbooksInventoryID
		{
			get
			{
				return this._QuickbooksInventoryID;
			}
			set
			{
				if ((this._QuickbooksInventoryID != value))
				{
					if (this._QuickbooksInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuickbooksInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._QuickbooksInventoryID = value;
					this.SendPropertyChanged("QuickbooksInventoryID");
					this.OnQuickbooksInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopInventory_ShopQuickbooksInventoryLink", Storage="_ShopQuickbooksInventoryLinks", ThisKey="InventoryID", OtherKey="ShopInventoryID")]
		public EntitySet<ShopQuickbooksInventoryLink> ShopQuickbooksInventoryLinks
		{
			get
			{
				return this._ShopQuickbooksInventoryLinks;
			}
			set
			{
				this._ShopQuickbooksInventoryLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ShopInventory", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.ShopInventories.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.ShopInventories.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuickbooksInventory_ShopInventory", Storage="_QuickbooksInventory", ThisKey="QuickbooksInventoryID", OtherKey="QuickbooksInventoryID", IsForeignKey=true)]
		public QuickbooksInventory QuickbooksInventory
		{
			get
			{
				return this._QuickbooksInventory.Entity;
			}
			set
			{
				QuickbooksInventory previousValue = this._QuickbooksInventory.Entity;
				if (((previousValue != value) 
							|| (this._QuickbooksInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuickbooksInventory.Entity = null;
						previousValue.ShopInventories.Remove(this);
					}
					this._QuickbooksInventory.Entity = value;
					if ((value != null))
					{
						value.ShopInventories.Add(this);
						this._QuickbooksInventoryID = value.QuickbooksInventoryID;
					}
					else
					{
						this._QuickbooksInventoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuickbooksInventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShopQuickbooksInventoryLinks(ShopQuickbooksInventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.ShopInventory = this;
		}
		
		private void detach_ShopQuickbooksInventoryLinks(ShopQuickbooksInventoryLink entity)
		{
			this.SendPropertyChanging();
			entity.ShopInventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopQuickbooksInventoryLink")]
	public partial class ShopQuickbooksInventoryLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkID;
		
		private int _ShopInventoryID;
		
		private int _QuickbooksInventoryID;
		
		private EntityRef<QuickbooksInventory> _QuickbooksInventory;
		
		private EntityRef<ShopInventory> _ShopInventory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnShopInventoryIDChanging(int value);
    partial void OnShopInventoryIDChanged();
    partial void OnQuickbooksInventoryIDChanging(int value);
    partial void OnQuickbooksInventoryIDChanged();
    #endregion
		
		public ShopQuickbooksInventoryLink()
		{
			this._QuickbooksInventory = default(EntityRef<QuickbooksInventory>);
			this._ShopInventory = default(EntityRef<ShopInventory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopInventoryID", DbType="Int NOT NULL")]
		public int ShopInventoryID
		{
			get
			{
				return this._ShopInventoryID;
			}
			set
			{
				if ((this._ShopInventoryID != value))
				{
					if (this._ShopInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._ShopInventoryID = value;
					this.SendPropertyChanged("ShopInventoryID");
					this.OnShopInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickbooksInventoryID", DbType="Int NOT NULL")]
		public int QuickbooksInventoryID
		{
			get
			{
				return this._QuickbooksInventoryID;
			}
			set
			{
				if ((this._QuickbooksInventoryID != value))
				{
					if (this._QuickbooksInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuickbooksInventoryIDChanging(value);
					this.SendPropertyChanging();
					this._QuickbooksInventoryID = value;
					this.SendPropertyChanged("QuickbooksInventoryID");
					this.OnQuickbooksInventoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuickbooksInventory_ShopQuickbooksInventoryLink", Storage="_QuickbooksInventory", ThisKey="QuickbooksInventoryID", OtherKey="QuickbooksInventoryID", IsForeignKey=true)]
		public QuickbooksInventory QuickbooksInventory
		{
			get
			{
				return this._QuickbooksInventory.Entity;
			}
			set
			{
				QuickbooksInventory previousValue = this._QuickbooksInventory.Entity;
				if (((previousValue != value) 
							|| (this._QuickbooksInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuickbooksInventory.Entity = null;
						previousValue.ShopQuickbooksInventoryLinks.Remove(this);
					}
					this._QuickbooksInventory.Entity = value;
					if ((value != null))
					{
						value.ShopQuickbooksInventoryLinks.Add(this);
						this._QuickbooksInventoryID = value.QuickbooksInventoryID;
					}
					else
					{
						this._QuickbooksInventoryID = default(int);
					}
					this.SendPropertyChanged("QuickbooksInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopInventory_ShopQuickbooksInventoryLink", Storage="_ShopInventory", ThisKey="ShopInventoryID", OtherKey="InventoryID", IsForeignKey=true)]
		public ShopInventory ShopInventory
		{
			get
			{
				return this._ShopInventory.Entity;
			}
			set
			{
				ShopInventory previousValue = this._ShopInventory.Entity;
				if (((previousValue != value) 
							|| (this._ShopInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopInventory.Entity = null;
						previousValue.ShopQuickbooksInventoryLinks.Remove(this);
					}
					this._ShopInventory.Entity = value;
					if ((value != null))
					{
						value.ShopQuickbooksInventoryLinks.Add(this);
						this._ShopInventoryID = value.InventoryID;
					}
					else
					{
						this._ShopInventoryID = default(int);
					}
					this.SendPropertyChanged("ShopInventory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.states")]
	public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _abbr;
		
		private string _name;
		
		private System.Nullable<bool> _canada;
		
		private System.Nullable<bool> _contiguous;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncanadaChanging(System.Nullable<bool> value);
    partial void OncanadaChanged();
    partial void OncontiguousChanging(System.Nullable<bool> value);
    partial void OncontiguousChanged();
    #endregion
		
		public state()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canada", DbType="Bit")]
		public System.Nullable<bool> canada
		{
			get
			{
				return this._canada;
			}
			set
			{
				if ((this._canada != value))
				{
					this.OncanadaChanging(value);
					this.SendPropertyChanging();
					this._canada = value;
					this.SendPropertyChanged("canada");
					this.OncanadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contiguous", DbType="Bit")]
		public System.Nullable<bool> contiguous
		{
			get
			{
				return this._contiguous;
			}
			set
			{
				if ((this._contiguous != value))
				{
					this.OncontiguousChanging(value);
					this.SendPropertyChanging();
					this._contiguous = value;
					this.SendPropertyChanged("contiguous");
					this.OncontiguousChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private string _Guid;
		
		private int _ClientID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _ProcessedItemInventoryQuery;
		
		private System.Nullable<bool> _ProcessedItemSalesTaxQueryRs;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnGuidChanging(string value);
    partial void OnGuidChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnProcessedItemInventoryQueryChanging(System.Nullable<bool> value);
    partial void OnProcessedItemInventoryQueryChanged();
    partial void OnProcessedItemSalesTaxQueryRsChanging(System.Nullable<bool> value);
    partial void OnProcessedItemSalesTaxQueryRsChanged();
    #endregion
		
		public Transaction()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedItemInventoryQuery", DbType="Bit")]
		public System.Nullable<bool> ProcessedItemInventoryQuery
		{
			get
			{
				return this._ProcessedItemInventoryQuery;
			}
			set
			{
				if ((this._ProcessedItemInventoryQuery != value))
				{
					this.OnProcessedItemInventoryQueryChanging(value);
					this.SendPropertyChanging();
					this._ProcessedItemInventoryQuery = value;
					this.SendPropertyChanged("ProcessedItemInventoryQuery");
					this.OnProcessedItemInventoryQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedItemSalesTaxQueryRs", DbType="Bit")]
		public System.Nullable<bool> ProcessedItemSalesTaxQueryRs
		{
			get
			{
				return this._ProcessedItemSalesTaxQueryRs;
			}
			set
			{
				if ((this._ProcessedItemSalesTaxQueryRs != value))
				{
					this.OnProcessedItemSalesTaxQueryRsChanging(value);
					this.SendPropertyChanging();
					this._ProcessedItemSalesTaxQueryRs = value;
					this.SendPropertyChanged("ProcessedItemSalesTaxQueryRs");
					this.OnProcessedItemSalesTaxQueryRsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Order", Storage="_Orders", ThisKey="TransactionID", OtherKey="TransactionID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Customer", Storage="_Customers", ThisKey="TransactionID", OtherKey="TransactionID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Transaction", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public UserProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(56) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private System.DateTime _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private string _Name;
		
		private System.Nullable<int> _ClientID;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    #endregion
		
		public webpages_Membership()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_webpages_Membership", Storage="_Client", ThisKey="ClientID", OtherKey="ContentEditsClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.webpages_Memberships.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.webpages_Memberships.Add(this);
						this._ClientID = value.ContentEditsClientID;
					}
					else
					{
						this._ClientID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private int _Shops_ShopperID;
		
		private bool _Reported;
		
		private System.Nullable<int> _TransactionID;
		
		private string _BillingFirstName;
		
		private string _BillingLastName;
		
		private string _BillingAddress1;
		
		private string _BillingAddress2;
		
		private string _BillingCity;
		
		private string _BillingState;
		
		private string _BillingZip;
		
		private string _BillingCountry;
		
		private string _ShippingFirstname;
		
		private string _ShippingLastName;
		
		private string _ShippingAddress1;
		
		private string _ShippingAddress2;
		
		private string _ShippingCity;
		
		private string _ShippingState;
		
		private string _ShippingPostalCode;
		
		private string _ShippingCountry;
		
		private string _Phone;
		
		private string _Email;
		
		private string _AltContact;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Transaction> _Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnShops_ShopperIDChanging(int value);
    partial void OnShops_ShopperIDChanged();
    partial void OnReportedChanging(bool value);
    partial void OnReportedChanged();
    partial void OnTransactionIDChanging(System.Nullable<int> value);
    partial void OnTransactionIDChanged();
    partial void OnBillingFirstNameChanging(string value);
    partial void OnBillingFirstNameChanged();
    partial void OnBillingLastNameChanging(string value);
    partial void OnBillingLastNameChanged();
    partial void OnBillingAddress1Changing(string value);
    partial void OnBillingAddress1Changed();
    partial void OnBillingAddress2Changing(string value);
    partial void OnBillingAddress2Changed();
    partial void OnBillingCityChanging(string value);
    partial void OnBillingCityChanged();
    partial void OnBillingStateChanging(string value);
    partial void OnBillingStateChanged();
    partial void OnBillingZipChanging(string value);
    partial void OnBillingZipChanged();
    partial void OnBillingCountryChanging(string value);
    partial void OnBillingCountryChanged();
    partial void OnShippingFirstnameChanging(string value);
    partial void OnShippingFirstnameChanged();
    partial void OnShippingLastNameChanging(string value);
    partial void OnShippingLastNameChanged();
    partial void OnShippingAddress1Changing(string value);
    partial void OnShippingAddress1Changed();
    partial void OnShippingAddress2Changing(string value);
    partial void OnShippingAddress2Changed();
    partial void OnShippingCityChanging(string value);
    partial void OnShippingCityChanged();
    partial void OnShippingStateChanging(string value);
    partial void OnShippingStateChanged();
    partial void OnShippingPostalCodeChanging(string value);
    partial void OnShippingPostalCodeChanged();
    partial void OnShippingCountryChanging(string value);
    partial void OnShippingCountryChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAltContactChanging(string value);
    partial void OnAltContactChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Transaction = default(EntityRef<Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shops_ShopperID", DbType="Int NOT NULL")]
		public int Shops_ShopperID
		{
			get
			{
				return this._Shops_ShopperID;
			}
			set
			{
				if ((this._Shops_ShopperID != value))
				{
					this.OnShops_ShopperIDChanging(value);
					this.SendPropertyChanging();
					this._Shops_ShopperID = value;
					this.SendPropertyChanged("Shops_ShopperID");
					this.OnShops_ShopperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reported", DbType="Bit NOT NULL")]
		public bool Reported
		{
			get
			{
				return this._Reported;
			}
			set
			{
				if ((this._Reported != value))
				{
					this.OnReportedChanging(value);
					this.SendPropertyChanging();
					this._Reported = value;
					this.SendPropertyChanged("Reported");
					this.OnReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int")]
		public System.Nullable<int> TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					if (this._Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingFirstName", DbType="NVarChar(100)")]
		public string BillingFirstName
		{
			get
			{
				return this._BillingFirstName;
			}
			set
			{
				if ((this._BillingFirstName != value))
				{
					this.OnBillingFirstNameChanging(value);
					this.SendPropertyChanging();
					this._BillingFirstName = value;
					this.SendPropertyChanged("BillingFirstName");
					this.OnBillingFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingLastName", DbType="NVarChar(100)")]
		public string BillingLastName
		{
			get
			{
				return this._BillingLastName;
			}
			set
			{
				if ((this._BillingLastName != value))
				{
					this.OnBillingLastNameChanging(value);
					this.SendPropertyChanging();
					this._BillingLastName = value;
					this.SendPropertyChanged("BillingLastName");
					this.OnBillingLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress1", DbType="NVarChar(100)")]
		public string BillingAddress1
		{
			get
			{
				return this._BillingAddress1;
			}
			set
			{
				if ((this._BillingAddress1 != value))
				{
					this.OnBillingAddress1Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress1 = value;
					this.SendPropertyChanged("BillingAddress1");
					this.OnBillingAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress2", DbType="NVarChar(100)")]
		public string BillingAddress2
		{
			get
			{
				return this._BillingAddress2;
			}
			set
			{
				if ((this._BillingAddress2 != value))
				{
					this.OnBillingAddress2Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress2 = value;
					this.SendPropertyChanged("BillingAddress2");
					this.OnBillingAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCity", DbType="NVarChar(50)")]
		public string BillingCity
		{
			get
			{
				return this._BillingCity;
			}
			set
			{
				if ((this._BillingCity != value))
				{
					this.OnBillingCityChanging(value);
					this.SendPropertyChanging();
					this._BillingCity = value;
					this.SendPropertyChanged("BillingCity");
					this.OnBillingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingState", DbType="NVarChar(50)")]
		public string BillingState
		{
			get
			{
				return this._BillingState;
			}
			set
			{
				if ((this._BillingState != value))
				{
					this.OnBillingStateChanging(value);
					this.SendPropertyChanging();
					this._BillingState = value;
					this.SendPropertyChanged("BillingState");
					this.OnBillingStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingZip", DbType="NVarChar(15)")]
		public string BillingZip
		{
			get
			{
				return this._BillingZip;
			}
			set
			{
				if ((this._BillingZip != value))
				{
					this.OnBillingZipChanging(value);
					this.SendPropertyChanging();
					this._BillingZip = value;
					this.SendPropertyChanged("BillingZip");
					this.OnBillingZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCountry", DbType="NVarChar(50)")]
		public string BillingCountry
		{
			get
			{
				return this._BillingCountry;
			}
			set
			{
				if ((this._BillingCountry != value))
				{
					this.OnBillingCountryChanging(value);
					this.SendPropertyChanging();
					this._BillingCountry = value;
					this.SendPropertyChanged("BillingCountry");
					this.OnBillingCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingFirstname", DbType="NVarChar(100)")]
		public string ShippingFirstname
		{
			get
			{
				return this._ShippingFirstname;
			}
			set
			{
				if ((this._ShippingFirstname != value))
				{
					this.OnShippingFirstnameChanging(value);
					this.SendPropertyChanging();
					this._ShippingFirstname = value;
					this.SendPropertyChanged("ShippingFirstname");
					this.OnShippingFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingLastName", DbType="NVarChar(100)")]
		public string ShippingLastName
		{
			get
			{
				return this._ShippingLastName;
			}
			set
			{
				if ((this._ShippingLastName != value))
				{
					this.OnShippingLastNameChanging(value);
					this.SendPropertyChanging();
					this._ShippingLastName = value;
					this.SendPropertyChanged("ShippingLastName");
					this.OnShippingLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress1", DbType="NVarChar(100)")]
		public string ShippingAddress1
		{
			get
			{
				return this._ShippingAddress1;
			}
			set
			{
				if ((this._ShippingAddress1 != value))
				{
					this.OnShippingAddress1Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress1 = value;
					this.SendPropertyChanged("ShippingAddress1");
					this.OnShippingAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress2", DbType="NVarChar(100)")]
		public string ShippingAddress2
		{
			get
			{
				return this._ShippingAddress2;
			}
			set
			{
				if ((this._ShippingAddress2 != value))
				{
					this.OnShippingAddress2Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress2 = value;
					this.SendPropertyChanged("ShippingAddress2");
					this.OnShippingAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCity", DbType="NVarChar(50)")]
		public string ShippingCity
		{
			get
			{
				return this._ShippingCity;
			}
			set
			{
				if ((this._ShippingCity != value))
				{
					this.OnShippingCityChanging(value);
					this.SendPropertyChanging();
					this._ShippingCity = value;
					this.SendPropertyChanged("ShippingCity");
					this.OnShippingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingState", DbType="NVarChar(15)")]
		public string ShippingState
		{
			get
			{
				return this._ShippingState;
			}
			set
			{
				if ((this._ShippingState != value))
				{
					this.OnShippingStateChanging(value);
					this.SendPropertyChanging();
					this._ShippingState = value;
					this.SendPropertyChanged("ShippingState");
					this.OnShippingStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingPostalCode", DbType="NVarChar(50)")]
		public string ShippingPostalCode
		{
			get
			{
				return this._ShippingPostalCode;
			}
			set
			{
				if ((this._ShippingPostalCode != value))
				{
					this.OnShippingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingPostalCode = value;
					this.SendPropertyChanged("ShippingPostalCode");
					this.OnShippingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCountry", DbType="NVarChar(50)")]
		public string ShippingCountry
		{
			get
			{
				return this._ShippingCountry;
			}
			set
			{
				if ((this._ShippingCountry != value))
				{
					this.OnShippingCountryChanging(value);
					this.SendPropertyChanging();
					this._ShippingCountry = value;
					this.SendPropertyChanged("ShippingCountry");
					this.OnShippingCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(75)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltContact", DbType="NVarChar(75)")]
		public string AltContact
		{
			get
			{
				return this._AltContact;
			}
			set
			{
				if ((this._AltContact != value))
				{
					this.OnAltContactChanging(value);
					this.SendPropertyChanging();
					this._AltContact = value;
					this.SendPropertyChanged("AltContact");
					this.OnAltContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Customer", Storage="_Transaction", ThisKey="TransactionID", OtherKey="TransactionID", IsForeignKey=true)]
		public Transaction Transaction
		{
			get
			{
				return this._Transaction.Entity;
			}
			set
			{
				Transaction previousValue = this._Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Transaction.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._TransactionID = value.TransactionID;
					}
					else
					{
						this._TransactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
}
#pragma warning restore 1591
